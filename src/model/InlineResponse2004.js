/**
 * Mail-Hub API
 * This is a specification for Mail-Hub API  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: support@mail-hub.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2004 model module.
 * @module model/InlineResponse2004
 * @version 0.8.0
 */
class InlineResponse2004 {
    /**
     * Constructs a new <code>InlineResponse2004</code>.
     * @alias module:model/InlineResponse2004
     */
    constructor() { 
        
        InlineResponse2004.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2004</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2004} obj Optional instance to populate.
     * @return {module:model/InlineResponse2004} The populated <code>InlineResponse2004</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2004();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('used')) {
                obj['used'] = ApiClient.convertToType(data['used'], 'Number');
            }
            if (data.hasOwnProperty('onetime')) {
                obj['onetime'] = ApiClient.convertToType(data['onetime'], 'Boolean');
            }
            if (data.hasOwnProperty('sdate')) {
                obj['sdate'] = ApiClient.convertToType(data['sdate'], 'Date');
            }
            if (data.hasOwnProperty('edate')) {
                obj['edate'] = ApiClient.convertToType(data['edate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * quota type
 * @member {String} type
 */
InlineResponse2004.prototype['type'] = undefined;

/**
 * maximum quota allowed
 * @member {Number} limit
 */
InlineResponse2004.prototype['limit'] = undefined;

/**
 * current usage of quota item
 * @member {Number} used
 */
InlineResponse2004.prototype['used'] = undefined;

/**
 * one-time or subscription based quota
 * @member {Boolean} onetime
 */
InlineResponse2004.prototype['onetime'] = undefined;

/**
 * start of effective date for quota
 * @member {Date} sdate
 */
InlineResponse2004.prototype['sdate'] = undefined;

/**
 * end of effective date for quota
 * @member {Date} edate
 */
InlineResponse2004.prototype['edate'] = undefined;






export default InlineResponse2004;

