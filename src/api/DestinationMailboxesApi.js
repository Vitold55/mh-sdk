/**
 * Mail-Hub API
 * This is a specification for Mail-Hub API  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: support@mail-hub.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DestinationMailbox from '../model/DestinationMailbox';
import InlineObject from '../model/InlineObject';
import InlineResponse200 from '../model/InlineResponse200';
import Model0 from '../model/Model0';
import OneOfobjectobject from '../model/OneOfobjectobject';

/**
* DestinationMailboxes service.
* @module api/DestinationMailboxesApi
* @version 0.8.0
*/
export default class DestinationMailboxesApi {

    /**
    * Constructs a new DestinationMailboxesApi. 
    * @alias module:api/DestinationMailboxesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the destinationsMailboxesGet operation.
     * @callback module:api/DestinationMailboxesApi~destinationsMailboxesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DestinationMailbox>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all destination mailboxes
     * List destination mailboxes.</br>  Destination mailboxes are 3rd party mailboxes that may receive mails from Mail-Hub.</br> E.g. one can configure to forward incoming mails to destination mailboxes. 
     * @param {module:api/DestinationMailboxesApi~destinationsMailboxesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DestinationMailbox>}
     */
    destinationsMailboxesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [DestinationMailbox];
      return this.apiClient.callApi(
        '/destinations/mailboxes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the destinationsMailboxesIdDelete operation.
     * @callback module:api/DestinationMailboxesApi~destinationsMailboxesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete destination mailbox
     * Delete destination mailbox
     * @param {Number} id ID of destination mailbox
     * @param {module:api/DestinationMailboxesApi~destinationsMailboxesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    destinationsMailboxesIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling destinationsMailboxesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/destinations/mailboxes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the destinationsMailboxesPost operation.
     * @callback module:api/DestinationMailboxesApi~destinationsMailboxesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add one destination mailbox
     * Add single destination mailbox that can be used as destination for forwarding. 
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject} opts.inlineObject 
     * @param {module:api/DestinationMailboxesApi~destinationsMailboxesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    destinationsMailboxesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/destinations/mailboxes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
