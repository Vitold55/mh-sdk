/**
 * Mail-Hub API
 * This is a specification for Mail-Hub API  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 0.8.0
 * Contact: support@mail-hub.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2001 model module.
 * @module model/InlineResponse2001
 * @version 0.8.0
 */
class InlineResponse2001 {
    /**
     * Constructs a new <code>InlineResponse2001</code>.
     * @alias module:model/InlineResponse2001
     */
    constructor() { 
        
        InlineResponse2001.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2001</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001} The populated <code>InlineResponse2001</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('purpose')) {
                obj['purpose'] = ApiClient.convertToType(data['purpose'], 'String');
            }
            if (data.hasOwnProperty('expireOn')) {
                obj['expireOn'] = ApiClient.convertToType(data['expireOn'], 'Date');
            }
            if (data.hasOwnProperty('createBefore')) {
                obj['createBefore'] = ApiClient.convertToType(data['createBefore'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
InlineResponse2001.prototype['name'] = undefined;

/**
 * @member {module:model/InlineResponse2001.PurposeEnum} purpose
 */
InlineResponse2001.prototype['purpose'] = undefined;

/**
 * Expiration time tells, that starting from this time no more mails  will be accepted for the domain. 
 * @member {Date} expireOn
 */
InlineResponse2001.prototype['expireOn'] = undefined;

/**
 * All objects based on this domain allowed to be created before this  date. 
 * @member {Date} createBefore
 */
InlineResponse2001.prototype['createBefore'] = undefined;





/**
 * Allowed values for the <code>purpose</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2001['PurposeEnum'] = {

    /**
     * value: "subdomain"
     * @const
     */
    "subdomain": "subdomain",

    /**
     * value: "mailbox"
     * @const
     */
    "mailbox": "mailbox"
};



export default InlineResponse2001;

